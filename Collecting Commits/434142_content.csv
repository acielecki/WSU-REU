path,type,content
README.markdown,blob,"b'# repeat.vim\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n* [vim-radical](https://github.com/glts/vim-radical)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\n## Installation\n\nInstall using your favorite package manager, or use Vim\'s built-in package\nsupport:\n\n    mkdir -p ~/.vim/pack/tpope/start\n    cd ~/.vim/pack/tpope/start\n    git clone https://tpope.io/vim/repeat.git\n\n## Contributing\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\n## Self-Promotion\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\n## License\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'# repeat.vim\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n* [vim-radical](https://github.com/glts/vim-radical)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\n## Installation\n\nInstall using your favorite package manager, or use Vim\'s built-in package\nsupport:\n\n    mkdir -p ~/.vim/pack/tpope/start\n    cd ~/.vim/pack/tpope/start\n    git clone https://tpope.io/vim/repeat.git\n\n## Contributing\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\n## Self-Promotion\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\n## License\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'# repeat.vim\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\n## Installation\n\nInstall using your favorite package manager, or use Vim\'s built-in package\nsupport:\n\n    mkdir -p ~/.vim/pack/tpope/start\n    cd ~/.vim/pack/tpope/start\n    git clone https://tpope.io/vim/repeat.git\n\n## Contributing\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\n## Self-Promotion\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\n## License\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'# repeat.vim\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\n## Installation\n\nInstall using your favorite package manager, or use Vim\'s built-in package\nsupport:\n\n    mkdir -p ~/.vim/pack/tpope/start\n    cd ~/.vim/pack/tpope/start\n    git clone https://tpope.io/vim/repeat.git\n\n## Contributing\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\n## Self-Promotion\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\n## License\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'# repeat.vim\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\n## Installation\n\nInstall using your favorite package manager, or use Vim\'s built-in package\nsupport:\n\n    mkdir -p ~/.vim/pack/tpope/start\n    cd ~/.vim/pack/tpope/start\n    git clone https://tpope.io/vim/repeat.git\n\n## Contributing\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\n## Self-Promotion\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\n## License\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'# repeat.vim\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\n## Installation\n\nInstall using your favorite package manager, or use Vim\'s built-in package\nsupport:\n\n    mkdir -p ~/.vim/pack/tpope/start\n    cd ~/.vim/pack/tpope/start\n    git clone https://tpope.io/vim/repeat.git\n\n## Contributing\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\n## Self-Promotion\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\n## License\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'# repeat.vim\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\n## Installation\n\nInstall using your favorite package manager, or use Vim\'s built-in package\nsupport:\n\n    mkdir -p ~/.vim/pack/tpope/start\n    cd ~/.vim/pack/tpope/start\n    git clone https://tpope.io/vim/repeat.git\n\n## Contributing\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\n## Self-Promotion\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\n## License\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'# repeat.vim\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\n## Installation\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\n## Contributing\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\n## Self-Promotion\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\n## License\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n* [vim-easyclip](https://github.com/svermeulen/vim-easyclip)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nCopyright (c) Tim Pope.  Distributed under the same terms as Vim itself.\nSee `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nDistributable under the same terms as Vim itself.  See `:help license`.\n'"
README.markdown,blob,"b'repeat.vim\n==========\n\nIf you\'ve ever tried using the `.` command after a plugin map, you were\nlikely disappointed to discover it only repeated the last native command\ninside that map, rather than the map as a whole.  That disappointment\nends today.  Repeat.vim remaps `.` in a way that plugins can tap into\nit.\n\nThe following plugins support repeat.vim:\n\n* [surround.vim](https://github.com/tpope/vim-surround)\n* [speeddating.vim](https://github.com/tpope/vim-speeddating)\n* [abolish.vim](https://github.com/tpope/vim-abolish)\n* [unimpaired.vim](https://github.com/tpope/vim-unimpaired)\n* [commentary.vim](https://github.com/tpope/vim-commentary)\n\nAdding support to a plugin is generally as simple as the following\ncommand at the end of your map functions.\n\n    silent! call repeat#set(""\\<Plug>MyWonderfulMap"", v:count)\n\nInstallation\n------------\n\nIf you don\'t have a preferred installation method, I recommend\ninstalling [pathogen.vim](https://github.com/tpope/vim-pathogen), and\nthen simply copy and paste:\n\n    cd ~/.vim/bundle\n    git clone git://github.com/tpope/vim-repeat.git\n\nContributing\n------------\n\nSee the contribution guidelines for\n[pathogen.vim](https://github.com/tpope/vim-pathogen#readme).\n\nSelf-Promotion\n--------------\n\nLike repeat.vim? Follow the repository on\n[GitHub](https://github.com/tpope/vim-repeat) and vote for it on\n[vim.org](http://www.vim.org/scripts/script.php?script_id=2136).  And if\nyou\'re feeling especially charitable, follow [tpope](http://tpo.pe/) on\n[Twitter](http://twitter.com/tpope) and\n[GitHub](https://github.com/tpope).\n\nLicense\n-------\n\nDistributable under the same terms as Vim itself.  See `:help license`.\n'"
